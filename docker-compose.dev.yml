## run the line below to create your environement:
## docker compose -f docker-compose.dev.yml -p facilitator-dev up -d

## ------------------- end ----------------
services:
  ddtimer:
    platform: linux/amd64
    image: lancel00zz/ddtimer:latest
    pull_policy: always
    ports:
      - "5056:5050"
    restart: unless-stopped
    volumes:
    ## it loads dev environment folders inside the container - so it is a direct and live link to them
      - ./:/app
    environment:
      - FLASK_ENV=development
      - DD_ENV=dev
      - DD_SERVICE=ddtimer
      - DD_VERSION=5.1
      - DD_AGENT_HOST=datadog-agent
      - DD_TRACE_AGENT_PORT=8126
      - DD_TRACE_ENABLED=true
      - DATABASE_URL=postgresql://ddtimer:ddtimerpassword@db:5432/ddtimerdb
    labels:
      com.datadoghq.ad.logs: '[{"source": "flask", "service": "ddtimer"}]'
    networks:
      - ddtimer-network
# ----------------------------------------------------------
  # IMPORTANT:
  # If you ever delete the db_data volume (e.g., with `docker compose down -v`),
  # you MUST copy your custom postgresql.conf into the new volume/container:
  #   docker cp ./postgresql.conf <db_container_id>:/var/lib/postgresql/data/postgresql.conf
  # Or, for dev, you can mount it directly:
  #   - ./postgresql.conf:/var/lib/postgresql/data/postgresql.conf:ro
  # This ensures 'shared_preload_libraries = "pg_stat_statements"' is set for Datadog DBM.
  # username: datadog password: datadogpassword
  # ----------------------------------------------------------
  db:
    image: postgres:15
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ddtimerdb
      POSTGRES_USER: ddtimer
      POSTGRES_PASSWORD: ddtimerpassword
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - ddtimer-network
    labels:
      com.datadoghq.ad.logs: '[{"source": "postgresql", "service": "ddtimer-db"}]'


  datadog-agent:
    image: gcr.io/datadoghq/agent:7.67.0
    platform: linux/amd64
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=datadoghq.com
      - DD_APM_ENABLED=true
      - DD_APM_MAX_TRACES_PER_SECOND=1000        # Much lower limit
      - DD_APM_ERROR_TPS=50                    # Higher error sampling
      - DD_APM_DISABLE_RARE_SAMPLER=false     # Keep rare sampler for errors
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_CONTAINER_EXCLUDE=name:datadog-agent
      - DD_HOSTNAME=ddtimer-agent-dev-local
      - DD_ENV=dev
      - DD_SERVICE=datadog-agent
      - DD_VERSION=5.1
# Add to datadog-agent service:
    labels:
      com.datadoghq.tags.environment: "dev"
      com.datadoghq.tags.team: "development"
      com.datadoghq.tags.project: "ddtimer"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./datadog-config/postgres.d:/etc/datadog-agent/conf.d/postgres.d:ro
    restart: unless-stopped
    networks:
      - ddtimer-network

networks:
  ddtimer-network:
    driver: bridge

volumes:
  db_data:
