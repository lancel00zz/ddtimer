## this docker compose is for testing new dev. It does:
## 1. pull the image mentioned below from dockerhub
## 2. assign dev port (5056) to flask internal port (5050) - beware (falsed is forced to 5000 because of the last line of this file. Otherwise it would remain 5050 as defined in the dockerhub image!!)
## 3. loads the dev environment (/Documents/Github/facilitator-app/...) inside the container. Gives you real access to the dev files to test!!
## to access the file, use chrome localhost:5056 or <IP_address>:5056 (better for QRs)
## run the line below to create your environement:
## docker compose -f docker-compose.dev.yml -p facilitator-dev up -d
## or, to see logs in realtime (annoying sometimes):
## docker compose -f docker-compose.dev.yml -p facilitator-dev up 
## ------------------- end ----------------
services:
  ddtimer:
    platform: linux/amd64
    image: lancel00zz/ddtimer:latest
    pull_policy: always
    ports:
      - "5056:5050"
    restart: unless-stopped      
    volumes:
    ## it loads dev environment folders inside the container - so it is a direct and live link to them
      - ./:/app
    environment:
      - FLASK_ENV=development
      - DD_ENV=dev-local
      - DD_SERVICE=ddtimer
      - DD_VERSION=4.8
    labels:
      com.datadoghq.ad.logs: '[{"source": "python"}]'
    networks:
      - ddtimer-network

  datadog-agent:
    image: gcr.io/datadoghq/agent:latest
    platform: linux/amd64
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=datadoghq.com
      - DD_APM_ENABLED=false
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_CONTAINER_EXCLUDE=name:datadog-agent
      - DD_HOSTNAME=ddtimer-agent-dev-local
      - DD_ENV=dev-local
      - DD_SERVICE=ddtimer
      - DD_VERSION=4.8
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    restart: unless-stopped
    networks:
      - ddtimer-network

networks:
  ddtimer-network:
    driver: bridge
