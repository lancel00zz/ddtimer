## this creates a docker container based on the dockerhub image below.
## run it in chrome localhost:5050 or <IP_address>:5050 (better for QR codes)
## to build it:
## docker compose -f docker-compose.yml -p facilitator-prod up
## or in verbose mode (in terminal with an ongoing console):
## docker compose -f docker-compose.yml up -d
## ------------------- end ----------------
name: ddtimer-local-production-branch

services:
  ddtimer:
    platform: linux/amd64
    image: lancel00zz/ddtimer:latest
    pull_policy: always
    command: ["./startup.sh"]  # ‚Üê This overrides the Dockerfile CMD and initializes the database
    ports:
      - "5050:5050"
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - DD_SERVICE=ddtimer
      - DD_ENV=prod
      - DD_VERSION=6.0
      - DD_AGENT_HOST=datadog-agent
      - DD_TRACE_AGENT_PORT=8126
      - DD_TRACE_ENABLED=true
      - DATABASE_URL=postgresql://ddtimer:ddtimerpassword@db:5432/ddtimerdb
    labels:
      com.datadoghq.ad.logs: '[{"source": "docker"}]'
    networks:
      - ddtimer-network

  db:
    image: postgres:15
    restart: unless-stopped
    ports:
      - "5436:5432"
    environment:
      POSTGRES_DB: ddtimerdb
      POSTGRES_USER: ddtimer
      POSTGRES_PASSWORD: ddtimerpassword
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - ddtimer-network
    labels:
      com.datadoghq.ad.logs: '[{"source": "postgresql", "service": "ddtimer-db"}]'


networks:
  ddtimer-network:
    driver: bridge

volumes:
  db_data:    
